数据库池
	1. 连接数据库
	#!/usr/bin/env python
    # -*- coding:utf-8 -*-
    import pymysql
      
    # 创建连接
    conn = pymysql.connect(host='127.0.0.1', port=3306, user='root', passwd='123', db='t1')
    # 创建游标
    cursor = conn.cursor()
      
    # 执行SQL，并返回收影响行数
    effect_row = cursor.execute("update hosts set host = '1.1.1.2'")
      
    # 执行SQL，并返回受影响行数
    #effect_row = cursor.execute("update hosts set host = '1.1.1.2' where nid > %s", (1,))
      
    # 执行SQL，并返回受影响行数
    #effect_row = cursor.executemany("insert into hosts(host,color_id)values(%s,%s)", [("1.1.1.11",1),("1.1.1.11",2)])
      
      
    # 提交，不然无法保存新建或者修改的数据
    conn.commit()
      
    # 关闭游标
    cursor.close()
    # 关闭连接
    conn.close()
	2. 查询
	3. 关闭数据库
SQLAchemy，ORM框架
    问题：什么是ORM？
        关系对象映射
            类 ==> 表
            对象 ==> 记录（一行数据）
            当有了对应关系之后，不再需要编写SQL语句，取而代之的是操作：类，对象。
            ORM：models.object.filter(id_gt=1, type_name="技术部")
            SQL：select
                    id，
                    name,
                    age,
                    email
                    from user left join type user.type_id = type.id
        问题：ORM和原生SQL哪个好？
            都好，ORM编写语句效率高，SQL语句执行效率高
        问题：概念
            db first：根据数据库的表生成类
                        Django：
                            python manage.py inspectdb
            code first：根据类创建数据库表
                        Django：
                            python manage.py makemigrations
                            python manage.py migrate
                        Flask 
        问题：ORM是怎么实现？
            class User(models.Model):
                user = models.CharField()
            
            
            User.objects.create()
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       